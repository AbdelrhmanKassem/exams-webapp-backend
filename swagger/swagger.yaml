---
openapi: 3.0.1
info:
  title: Exams API
  version: v1
paths:
  "/users/login":
    post:
      summary: Login User
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: Success
        '401':
          description: Failed (Incorrect Credentials)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_login_request"
  "/users/logout":
    delete:
      summary: Logout user
      security:
      - Bearer: []
      tags:
      - User
      responses:
        '200':
          description: Success
        '401':
          description: Failed (Already logged out / invalid token)
  "/users":
    post:
      summary: Create User
      security:
      - Bearer: []
      tags:
      - User
      parameters: []
      responses:
        '201 ':
          description: Success
        '422':
          description: Failed (invalid user data)
        '401':
          description: Failed (No auth header or not an admin)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_user_request"
  "/users/accept_invite":
    post:
      summary: Accept user invitation
      tags:
      - User
      parameters: []
      responses:
        '200 ':
          description: Success
        '422':
          description: Failed (Invalid password, unmatching passwords, invalid token)
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/accept_invitation_request"
components:
  contentType: application/vnd.api+json
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
  schemas:
    user_login_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
          required:
          - email
          - password
      required:
      - user
    create_user_request:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            username:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            role:
              type: string
          required:
          - email
          - username
          - first_name
          - last_name
          - role
      required:
      - user
    accept_invitation_request:
      type: object
      properties:
        user:
          type: object
          properties:
            password:
              type: string
            password_confirmation:
              type: string
            invitation_token:
              type: string
          required:
          - password
          - password_confirmation
          - invitation_token
      required:
      - user
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:3000
